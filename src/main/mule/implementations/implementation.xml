<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="9f15e4d8-8204-435b-8551-39334e390e79" >
		<http:request-connection protocol="HTTPS" host="${http.request.host}" port="${http.request.port}">
		</http:request-connection>
	</http:request-config>
	<oauth:token-manager-config name="Mule_Token_manager_config" doc:name="Token manager config" doc:id="ae8420a8-c5de-4da5-b9a0-0a86032b2f6b" objectStore="Object_store1"/>
	<http:request-config name="HTTP_Request_configuration-w-token-mgr" doc:name="HTTP Request configuration" doc:id="8b037d47-e8c5-4ea8-be20-f6c24f07bb2a" >
		<http:request-connection protocol="HTTPS" host="${http.request.host}" port="${http.request.port}">
			<http:authentication >
				<oauth:client-credentials-grant-type clientId="${secure::connectedApp.workerScaler.client_id}" clientSecret="${secure::connectedApp.workerScaler.client_secret}" tokenUrl="${http.request.token.url}" tokenManager="Mule_Token_manager_config" />
			</http:authentication>
		</http:request-connection>
	</http:request-config>
	<os:object-store name="Object_store1" doc:name="Object store" doc:id="0f06ea65-da4d-4b31-ad9a-f4e527a17b4e" />
	<sub-flow name="extract-details-then-enquire-workers" doc:id="6c65ee5a-774d-44e9-a598-526a839d335d" >
		<ee:transform doc:name="Extract domain details" doc:id="0506b1e7-3caf-4452-97b4-6a4396d5d8fb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.muleApps map (item, index) -> {
    "domain": item.domain
}
]]></ee:set-payload>
			</ee:message>
			<ee:variables />
		</ee:transform>
		<parallel-foreach doc:name="Parallel For Each" doc:id="f86449ac-074f-4693-9f10-c38f209cce64" collection="#[payload]" maxConcurrency="4">
			<set-variable value="#[payload.domain]" doc:name="Set Variable" doc:id="ba7ae27a-a61e-420e-8d3e-6322d357a561" variableName="domain"/>
			<http:request method="GET" doc:name="Query workers" doc:id="1b0658ee-de63-4ef0-864c-a485b736cf68" config-ref="HTTP_Request_configuration-w-token-mgr" path="#[p('http.request.applications.path') ++ vars.domain]" >
				<http:headers ><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : p('secure::cloudhub.envId'),
	"X-ANYPNT-ORG-ID" : p('secure::cloudhub.orgId')
}]]]></http:headers>
			</http:request>
		</parallel-foreach>
		<ee:transform doc:name="Transform Message" doc:id="97ee3cc0-aa7c-4755-833a-27a52abe8f0b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	muleApps: payload map (item, index) -> {
		"domain": payload.payload[index].domain,
		"workers": payload.payload[index].workers,
		"status": payload.payload[index].status
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="get-access-token" doc:id="da9dafb1-63a4-42e4-81eb-beff52d698fb" >
		<set-variable value="#[payload]" doc:name="Store OG payload" doc:id="8b1c47b9-c0ef-4854-841b-efd8ac293af7" variableName="og_payload"/>
		<ee:transform doc:name="Prepare credentials" doc:id="82a5780a-1e2a-4a61-97b6-2223f5141b3e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"client_id": p('secure::connectedApp.workerScaler.client_id'),
	"client_secret": p('secure::connectedApp.workerScaler.client_secret'),
	"grant_type": "client_credentials"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Request" doc:id="96bb1d8b-1153-4afc-aaac-d4e64604df96" config-ref="HTTP_Request_configuration" path="${http.request.token.path}">
			<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
		</http:request>
		<ee:transform doc:name="store token" doc:id="c724521d-5095-418f-adf3-9c64ab9649ee" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="access_token" ><![CDATA[%dw 2.0
output application/java
---
payload.access_token]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-payload value="#[vars.og_payload]" doc:name="Set Payload" doc:id="d495b413-09e4-4305-aa97-18a48c675a03" />
	</sub-flow>
</mule>
